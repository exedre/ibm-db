IBM Dataservers backend support in Django application Framework.
--------------------------------------------------------
ibm_db_django enables access to IBM databases from Django applications
  http://www.djangoproject.com/

The adapter has been developed and is supported by IBM. 

Prerequisites
--------------
1. UCS2 build of Python 2.5.
2. Django Framework 1.0.2.
3. IBM_DB driver and IBM_DB_DBI wrapper 0.7.2.1 or higher (ibm_db-0.7.2.1 is a minimum)
4. You need to apply a patch in django in-order to remove Non-standard SQL generation issue. 
   The patch is located at http://code.djangoproject.com/ticket/9862.
   You can extract creation.py file from http://code.djangoproject.com/changeset/9703?format=zip&new=9703 
   and paste it to /django/db/backends/

DB2 Django adapter (ibm_db_django) Build and Installation
----------------------------------------------------------

Install Django as per instructions from the Django website (http://docs.djangoproject.com/en/dev/topics/install/#installing-an-official-release)

1. Linux/MAC
  untar the ibm_db_django gz file
    $ tar -zxvf ibm_db_django-x.x.x.tar.gz

  Change to the untar'd folder
    $ cd ibm_db_django

  Install the ibm_db_django adapter
    $ python setup.py install

2. Windows
  Uncompress the gz file ibm_db_django-x.x.x.tar.gz
  C:\>cd ibm_db_django
  C:\ibm_db_django>python setup.py install


List of Operating Systems tested
--------------------------------
Ubuntu Linux 7.04 32 bit
Windows XP 32 bit
Mac OS X Leopard

Supported Databases
-------------------
IBM DB2 Database for Linux, Unix, Windows and MAC OS X, version 8.2 or higher (9.5 FP2 or higher for MAC OS X).

Future Supported Databases
--------------------------
IBM Cloudscape
Apache Derby
Informix(IDS) Cheetah version 11.10 onwards
Remote connections to i5/OS (iSeries)
Remote connections to z/OS (DB2 UDB for zOS)

Testing
-------
Create a new Django project by executing "django-admin.py startproject myproj".
Now go to this newly create directory, and edit settings.py file to access DB2.

In case of *nix the steps will be like:
 $ django-admin.py startproject myproj
 $ cd myproj
 $ vi settings.py

The settings.py will be like (after adding DB2 properties):
   DATABASE_ENGINE    = 'db2'
   DATABASE_NAME      = 'mydb'
   DATABASE_USER      = 'db2inst1'
   DATABASE_PASSWORD  = 'ibmdb2'
   DATABASE_HOST      = 'localhost'
   DATABASE_PORT      = '50000'
   
To enable DB2 support you need to set value of DATABASE_ENGINE to 'db2' in settings.py.

Next step is to run a simple test suite. To do this just execute following command in the 
project we created earlier:
 $ python manage.py test
 
For Windows, steps are same as above. In case of editing settings.py file, use notepad (or any other) editor.
 
Known Limitations in DB2 adapter
--------------------------------
1. User needs to create test database. It can not be created by this adapter.

2. Test cases related to NULLs in UNIQUE columns will fail. (Not supported by DB2)

3. Support for REGEX lookup is not present yet.

4. Non-standard SQL queries are not supported. e.g. "SELECT ? FROM TAB1"

5. EXACT lookup for LOB fields do not work. (Not supported by DB2)

6. CASE in-sensitive search in case of NUMBER datatypes (INT, FLOAT, DECIMAL, etc.) do not work (Not supported by DB2)

7. If values are inserted/updated manually in AutoField, then the adapter will fail if auto increment is done again on this AutoField.

8. dbshell will not work if server is remote and client is DB2 thin client.