Backend support for IBM Dataservers in Django Framework.
--------------------------------------------------------
ibm_db_django will enable the access to IBM Dataservers through 
Django Framework:
  http://www.djangoproject.com/

The adapter have been developed and will be supported by IBM. 

Prerequisites
--------------
1. Python 2.5 or higher with ucs2 build.
2. Django Framework 1.0.x.
3. IBM_DB driver and IBM_DB_DBI wrapper 0.7.0 or higher (ibm_db-0.7.0 is recommended).
4. You need to apply one patch in django in-order to remove Non-standard SQL generation issue. 
   The patch is located at http://code.djangoproject.com/ticket/9862.
   You can extract creation.py file from http://code.djangoproject.com/changeset/9703?format=zip&new=9703 
   and paste it to /django/db/backends/

DB2 Django adapter (ibm_db_django) Build and Installation
----------------------------------------------------------

1. Linux
  $ tar -zxvf ibm_db_django-x.x.x.tar.gz
  $ cd ibm_db_django-x.x.x
  $ python setup.py install

2. Windows
  Uncompress the compressed file ibm_db_django-x.x.x.tar.gz
  C:\>cd ibm_db_django
  C:\ibm_db_django>python setup.py install

Please note that the above steps assume that Django is installed as per instructions from Django website (http://docs.djangoproject.com/en/dev/topics/install/#installing-an-official-release)
Install might not work if Django is installed some other way and/or is installed incorrectly. 
  
List of Operating Systems tested
--------------------------------
Ubuntu Linux 7.04 32 bit
Windows XP 32 bit

Supported Databases
-------------------
IBM DB2 Database on Linux, Unix and Windows 8.2 and onwards

Future Supported Databases
--------------------------
IBM Cloudscape
Apache Derby
Native DB2 for i5/OS (iSeries)
Native DB2 UDB for zOS
Informix(IDS) Cheetah version 11.10 onwards
Remote connections to i5/OS (iSeries)
Remote connections to z/OS (DB2 UDB for zOS)
DB2 on Mac

Testing
-------
Create a new Django project by executing "django-admin.py startproject myproj".
Now go to this newly create directory, and edit settings.py file to access DB2.

In case of *nix the steps will be like:
 $ django-admin.py startproject myproj
 $ cd myproj
 $ vi settings.py

The settings.py will be like (after adding DB2 properties):
   DATABASE_ENGINE    = 'db2'
   DATABASE_NAME      = 'mydb'
   DATABASE_USER      = 'db2inst1'
   DATABASE_PASSWORD  = 'ibmdb2'
   DATABASE_HOST      = 'localhost'
   DATABASE_PORT      = '50000'
   
To enable DB2 support you need to set value of DATABASE_ENGINE to 'db2' in settings.py.

Next step is to run a simple test suite. To do this just execute following command in the 
project we created earlier:
 $ python manage.py test
 
For Windows, steps are same as above. In case of editing settings.py file, use notepad (or any other) editor.
 
Known Limitations in DB2 adapter
--------------------------------
1. User needs to create test database. It can not be created by this adapter.

2. Test cases related to NULLs in UNIQUE columns will fail. (Not supported by DB2.)

3. Support for REGEX lookup is not present yet.

4. Non-standard SQL queries are not supported. e.g. "SELECT ? FROM TAB1"

5. EXACT lookup in case of LOB fields will not work.

6. CASE in-sensitive search in case of NUMBER datatypes (INT, FLOAT, DECIMAL, etc.) will not work.

7. If values are inserted/updated manually in AutoField, then the adapter will fail if auto increment is done again on this AutoField.
